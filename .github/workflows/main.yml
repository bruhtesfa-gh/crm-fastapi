name: CRM FastAPI CI/CD

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.12.8"]
    steps:
      - uses: actions/checkout@v3

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Poetry
        run: |
          pip install poetry

      - name: Install dependencies
        run: |
          python -m venv .venv
          source .venv/bin/activate
          pip install --upgrade pip
          poetry install --no-root

      - name: Format code
        run: |
          poetry run isort app
          poetry run autoflake --remove-all-unused-imports --recursive --remove-unused-variables --in-place app --exclude=__init__.py
          poetry run black app
          poetry run isort app

      - name: Lint code
        run: |
          poetry run mypy app
          poetry run black app --check
          poetry run isort --check-only app
          poetry run flake8 app

      - name: Run tests
        run: |
          poetry run pytest --asyncio-mode=auto

  # Uncomment and configure the deploy job when ready to deploy
  # deploy:
  #   needs: [test, lint]
  #   if: github.ref == 'refs/heads/main' && github.event_name == 'push'
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v3
  #     - name: Set up Python
  #       uses: actions/setup-python@v4
  #       with:
  #         python-version: "3.10"
  #     - name: Install dependencies
  #       run: |
  #         python -m pip install --upgrade pip
  #         pip install -r requirements.txt
  #     - name: Run database migrations
  #       env:
  #         DATABASE_URL: ${{ secrets.DATABASE_URL }}
  #       run: |
  #         alembic upgrade head
  #     - name: Deploy to production
  #       env:
  #         DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
  #         DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
  #       run: |
  #         docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD
  #         docker build -t crm-fastapi .
  #         docker tag crm-fastapi $DOCKER_USERNAME/crm-fastapi:latest
  #         docker push $DOCKER_USERNAME/crm-fastapi:latest
